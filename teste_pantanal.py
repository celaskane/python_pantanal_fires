# -*- coding: utf-8 -*-
"""teste pantanal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R11mJaARfccpJjQ0sbYB80G_QQ8HItDt
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import seaborn as sns
from google.colab import files
uploaded = files.upload()

pantanal = pd.read_csv('2020-jan_nov.csv')

pantanal.head()

pantanal.describe()

pantanal.sort_values(['datahora', 'estado'], axis=0, ascending=True, inplace=True)
pantanal.head()

# Na coluna 'riscofogo' o número -999 representa valor inválido, 
# normalmente relacionado como área urbana ou corpos d'água, onde não
# faz sentido calcular o Risco de Fogo, portanto, removeremos esse valor.

df = pantanal.dropna()
df = pantanal[(pantanal.riscofogo != -999)]

df

df['municipio'].unique()

data_municipio = df[['datahora', 'estado', 'municipio', 'diasemchuva', 'precipitacao', 
                     'riscofogo', 'latitude', 'longitude']].groupby(['datahora', 'municipio'], as_index=False).mean()
data_municipio

group_municipio = df[['municipio', 'diasemchuva', 'precipitacao', 'riscofogo']].groupby(['municipio'], as_index=False).mean()
group_municipio

"""**Teste da separação de data-hora:**"""

teste = '2020/10/25 17:25:00'
import datetime

string = "19 Nov 2015  18:45:00.000"
date = datetime.datetime.strptime(teste, "%Y/%m/%d  %H:%M:%S")

print(date)
print(date.year)
print(date.month)
print(date.day)

data_municipio['datahora'] = pd.to_datetime(data_municipio['datahora'])
data_municipio

# Separando dia, mês e ano por colunas

data_municipio['dia'] = data_municipio['datahora'].dt.day
data_municipio['mês'] = data_municipio['datahora'].dt.month
data_municipio['ano'] = data_municipio['datahora'].dt.year
data_municipio

data_estado = df[['datahora', 'estado', 'municipio', 'diasemchuva', 'precipitacao', 
                     'riscofogo', 'latitude', 'longitude']].groupby(['datahora', 'estado'], as_index=False).mean()

# Separando a planilha entre os dois estados que compõem o pantanal.
foco_MT = data_estado.dropna()
foco_MT = data_estado[(data_estado.estado != 'MATO GROSSO DO SUL')]

foco_MS = data_estado.dropna()
foco_MS = data_estado[(data_estado.estado != 'MATO GROSSO')]

# Agrupando os dados por mês para visualização.

mes_fix = data_municipio[['mês', 'municipio', 'diasemchuva', 'precipitacao', 'riscofogo']].groupby(['mês', 'municipio'], as_index=False).mean().reset_index()
mes_fix

"""**Visualização dos Dados:**"""

# Gráfico de barras do Risco de Fogo por Município no ano de 2020

plt.figure(figsize = (8, 8))

ax = sns.barplot(x = df['riscofogo'], y = df['municipio'], palette = "icefire", alpha = 0.85)

plt.title("Municípios x Risco de Fogo - 2020", fontsize = 20)
plt.xlabel("Risco de Fogo", fontsize = 15)
plt.ylabel("Município", fontsize = 15)
plt.xticks(fontsize = 10)
plt.yticks(fontsize = 10)
plt.legend(fontsize = 10)

"""**Pode-se observar que os municípios que mais sofrem com os focos de incêndio são Barão de Melgaço, Nossa Senhora do Livramento, Santo Antônio do Leverger, Varzea Grande, Juscimeira e Glória d'Oeste.**"""

# Gráfico de linhas do Risco de Fogo por Mês (de acordo com cada município) no ano de 2020

plt.figure(figsize=(22,8))
sns.color_palette("Paired")
ax = sns.lineplot(x = 'mês', y = 'riscofogo', data = mes_fix, hue = 'municipio', estimator = 'sum', lw = 3, err_style = None)

plt.title('Risco de Fogo por Mês - 2020', fontsize = 25)
plt.xlabel('Mês', fontsize = 20)
plt.ylabel('Risco de Fogo', fontsize = 20)
plt.xticks(fontsize = 15)
plt.yticks(fontsize = 15)

ax.xaxis.set_major_locator(plt.MaxNLocator(10))
ax.set_xlim(1, 10)
ax.set_ylim(0.0, 1.0)

ax.get_yaxis().set_major_formatter(plt.FuncFormatter(lambda x, p: format(int(x), ',')))
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5), prop={'size': 14})

"""**Percebe-se que, a partir do mês de fevereiro, houve uma alta no índice de risco de fogo que permaneceu em crescimento até meados do mês de setembro.**"""

# Gráfico de linhas da Precipitação por Mês (de acordo com cada município) no ano de 2020

plt.figure(figsize=(22,8))
sns.color_palette("Paired")
ax = sns.lineplot(x = 'mês', y = 'precipitacao', data = mes_fix, hue = 'municipio', estimator = 'sum', lw = 3, err_style = None)

plt.title('Precipitação por Mês - 2020', fontsize = 25)
plt.xlabel('Mês', fontsize = 20)
plt.ylabel('Precipitação', fontsize = 20)
plt.xticks(fontsize = 15)
plt.yticks(fontsize = 15)

ax.xaxis.set_major_locator(plt.MaxNLocator(10))
ax.set_xlim(1, 10)
ax.set_ylim(0, 10)

ax.get_yaxis().set_major_formatter(plt.FuncFormatter(lambda x, p: format(int(x), ',')))
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5), prop={'size': 14})

"""**Em comparação ao risco de fogo, nota-se a queda da precipitação na região, que também teve início no mês de fevereiro, permanecendo praticamente sem chuva de março até setembro.**"""

# Instalando geopandas
!pip install --upgrade geopandas

import plotly.express as px
import geopandas as gpd

# Referencial geográfico dos focos de incêndio (Latitude x Longitude)

data_municipio_gpd = gpd.GeoDataFrame(data_municipio, geometry=gpd.points_from_xy(data_municipio['longitude'], data_municipio['latitude']))
data_municipio_gpd.crs={'init':'epsg:4326'}

world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
americas = world.loc[world['continent'].isin([ 'South America'])]
americas=americas.loc[americas['name']=='Brazil']

ax = americas.plot(figsize=(8,8), color='white', linestyle=':', edgecolor='white')
ax.set_facecolor('#CECBCB')
data_municipio_gpd.plot(ax=ax, markersize=50,color='red', alpha=0.025)

# upload do shapefile do estados Mato Grosso e Mato Grosso do Sul
# Obtido em ftp://geoftp.ibge.gov.br/organizacao_do_territorio/malhas_territoriais/malhas_municipais/

uploaded = files.upload()
uploaded = files.upload()

# Mapas dos Estados de Mato Grosso e Mato Grosso do Sul (Municípios)

MT = gpd.read_file('51MUE250GC_SIR.shp')
MS = gpd.read_file('50MUE250GC_SIR.shp')

MT.plot()
plt.title('Mapa do Estado de Mato Grosso', fontsize = 15)
MS.plot()
plt.title('Mapa do Estado de Mato Grosso do Sul', fontsize = 15)

# Referencial geográfico dos focos de incêndio por estado (Latitude x Longitude)

data_municipio_gpd = gpd.GeoDataFrame(data_municipio, geometry=gpd.points_from_xy(data_municipio['longitude'], data_municipio['latitude']))
data_municipio_gpd.crs={'init':'epsg:4326'}

ax = MT.plot(figsize=(5.5,5.5)) #edgecolor='white para destacar as fronteiras'
data_municipio_gpd.plot(ax=ax, markersize=50,color='red', alpha=0.125)
plt.title('Principais Focos de Incêndio que Atingem o Estado de Mato Grosso', fontsize = 15)

ax = MS.plot(figsize=(3.5,3.5)) #edgecolor='white para destacar as fronteiras'
data_municipio_gpd.plot(ax=ax, markersize=50,color='red', alpha=0.125)
plt.title('Principais Focos de Incêndio que Atingem o Estado de Mato Grosso do Sul', fontsize = 15)

# Corrigindo o posicionamento dos dados geográficos

foco_MT_gpd = gpd.GeoDataFrame(foco_MT, geometry=gpd.points_from_xy(foco_MT['longitude'], foco_MT['latitude']))
foco_MT_gpd.crs={'init':'epsg:4326'}

ax = MT.plot(figsize=(4.5,4.5))
foco_MT_gpd.plot(ax=ax, markersize=50,color='red', alpha=0.3)
plt.title('Principais Focos de Incêndio que Atingem o Estado de Mato Grosso', fontsize = 15)

foco_MS_gpd = gpd.GeoDataFrame(foco_MS, geometry=gpd.points_from_xy(foco_MS['longitude'], foco_MS['latitude']))
foco_MS_gpd.crs={'init':'epsg:4326'}

ax = MS.plot(figsize=(3,3))
foco_MS_gpd.plot(ax=ax, markersize=50,color='red', alpha=0.3)
plt.title('Principais Focos de Incêndio que Atingem o Estado de Mato Grosso do Sul', fontsize = 15)

"""**Através dos gráficos acima, podemos perceber que as regiões mais atingidas são o Centro-Sul e Sudeste Mato-Grossense, no Alto Pantanal e parte de Rondonópolis (MT) e os Pantanais de Mato Grosso do Sul, no Baixo Pantanal e parte de Aquidauana (MS).** 

**Grande parte das áreas atingidas são zonas fronteiriças entre Brasil, Bolívia e Paraguai.**
"""

